<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gradientPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="elipseComponent1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>